<!--
此示例下载自 https://echarts.apache.org/examples/zh/editor.html?c=bar-race&theme=dark
-->
<!DOCTYPE html>
<html lang="zh-CN" style="height: 100%">
	<head>
		<meta charset="utf-8">
		<style type="text/css">
			.style1 {
				font-size: larger;
			}
		#Layer1 {
	position:absolute;
	width:510px;
	height:228px;
	z-index:3;
	left: 292px;
	top: 380px;
	background-color: #99FF33;
}
        </style>
	</head>

	<body style="height: 100%; margin: 0;background-color:#191D34;">
		<script src="https://code.jquery.com/jquery-3.6.1.min.js"></script>
		<script src="https://raw.githack.com/wxh831130/set/main/js/core.js"></script>

	<div style="position: absolute; width: 1620px; height: 950px; z-index: 1; left: 0px; top: 0px" id="containera">
			<div style="position: absolute; width: 500px; height: 260px; z-index: 2; left: 0px; top: 0px" id="container01">	</div>
			<div style="position: absolute; width: 500px; height: 260px; z-index: 2; left: 562px; top:0px" id="container02"> </div>
			<div style="position: absolute; width: 500px; height: 260px; z-index: 2; left: 1118px; top:0px" id="container03"> </div>
	
			
    </div>
	<script>
			$("div").click(function(){
				
				// alert("adfadf")
				hcCore.fullScreen(this);
			})
				</script>
		<script type="text/javascript" src="https://fastly.jsdelivr.net/npm/echarts@5.4.0/dist/echarts.min.js"></script>
		<!-- <script type="text/javascript" src="http://175.178.116.100/mdjs/01.js"></script> -->
		<script type="text/javascript">

		var dom01 = document.getElementById('container01');
		var myChart01 = echarts.init(dom01, 'dark', {
		  renderer: 'canvas',
		  useDirtyRect: false
		});
		var app = {};
		
		var option;
	
		option = {
	  title: {
		text: 'Referer of a Website',
		subtext: 'Fake Data',
		left: 'center'
	  },
	  tooltip: {
		trigger: 'item'
	  },
	  legend: {
		orient: 'vertical',
		left: 'left'
	  },
	  series: [
		{
		  name: 'Access From',
		  type: 'pie',
		  radius: '50%',
		  data: [
			{ value: 1048, name: 'Search Engine' },
			{ value: 735, name: 'Direct' },
			{ value: 580, name: 'Email' },
			{ value: 484, name: 'Union Ads' },
			{ value: 300, name: 'Video Ads' }
		  ],
		  emphasis: {
			itemStyle: {
			  shadowBlur: 10,
			  shadowOffsetX: 0,
			  shadowColor: 'rgba(0, 0, 0, 0.5)'
			}
		  }
		}
	  ]
	};
	
		if (option && typeof option === 'object') {
		  myChart01.setOption(option);
		}
	
		window.addEventListener('resize', myChart01.resize);
	

</script>





		<span class="style1">
			
			<!-- Uncomment this line if you want to dataTool extension
<script type="text/javascript" src="https://fastly.jsdelivr.net/npm/echarts@5.4.0/dist/extension/dataTool.min.js"></script>
-->
			<!-- Uncomment this line if you want to use gl extension
<script type="text/javascript" src="https://fastly.jsdelivr.net/npm/echarts-gl@2/dist/echarts-gl.min.js"></script>
-->
			<!-- Uncomment this line if you want to echarts-stat extension
<script type="text/javascript" src="https://fastly.jsdelivr.net/npm/echarts-stat@latest/dist/ecStat.min.js"></script>
-->
			<!-- Uncomment this line if you want to use map
<script type="text/javascript" src="https://fastly.jsdelivr.net/npm/echarts@4.9.0/map/js/china.js"></script>
<script type="text/javascript" src="https://fastly.jsdelivr.net/npm/echarts@4.9.0/map/js/world.js"></script>
-->
			<!-- Uncomment these two lines if you want to use bmap extension
<script type="text/javascript" src="https://api.map.baidu.com/api?v=3.0&ak=YOUR_API_KEY"></script>
<script type="text/javascript" src="https://fastly.jsdelivr.net/npm/echarts@5.4.0/dist/extension/bmap.min.js"></script>
-->
			
			<script type="text/javascript">
				var dom = document.getElementById('container02');
				var myChart02 = echarts.init(dom, 'dark', {
					renderer: 'canvas',
					useDirtyRect: false
				});
				var app = {};
				var option;
				const data = [];
				for (let i = 0; i <5; ++i) {
					data.push(Math.round(Math.random() * 200));
				}
				option = {
					title: {
						text: '厂区实时产能能(Kpcs)(前3)'
					},
					xAxis: {
						max: 'dataMax'
					},
					yAxis: {
						type: 'category',
						data: ['龙华', '观澜', '武汉', '晋城', '郑州'],
						inverse: true,
						animationDuration: 300,
						animationDurationUpdate: 300,
						max: 2 // only the largest 3 bars will be displayed
					},
					series: [
						{
							realtimeSort: true,
							name: 'X',
							type: 'bar',
							data: data,
							label: {
								show: true,
								position: 'right',
								valueAnimation: true
							}
						}
					],
					legend: {
						show: true
					},
					animationDuration: 0,
					animationDurationUpdate: 3000,
					animationEasing: 'linear',
					animationEasingUpdate: 'linear'
				};
				function run() {
					for (var i = 0; i < data.length; ++i) {
						if (Math.random() > 0.9) {
							data[i] += Math.round(Math.random() * 2000);
						} else {
							data[i] += Math.round(Math.random() * 200);
						}
					}
					myChart02.setOption({
						series: [
							{
								type: 'bar',
								data
							}
						]
					});
					myChart03.setOption({
						series: [
							{
								type: 'bar',
								data
							}
						]
					});
				}
				setTimeout(function () {
					run();
				}, 0);
				setInterval(function () {
					run();
				}, 1000);
				if (option && typeof option === 'object') {
					myChart02.setOption(option);
				}
				window.addEventListener('resize', myChart02.resize);
			</script>
			<script type="text/javascript">
				var dom = document.getElementById('container03');
				var myChart03 = echarts.init(dom, 'dark', {
					renderer: 'canvas',
					useDirtyRect: false
				});
				var app = {};
				var option;
				option = {
					title: {
						text: '各机种实时产能(pcs)'
					},
					tooltip: {
						trigger: 'axis'
					},
					legend: {},
					toolbox: {
						show: false,
						feature: {
							dataZoom: {
								yAxisIndex: 'none'
							},
							dataView: { readOnly: false },
							magicType: { type: ['line', 'bar'] },
							restore: {},
							saveAsImage: {}
						}
					},
					xAxis: {
						type: 'category',
						boundaryGap: false,
						data: ['A', 'B', 'C', 'D', 'E', '', '']
					},
					yAxis: {
						type: 'value',
						axisLabel: {
							formatter: '{value}'
						}
					},
					series: [
						{
							name: 'Highest',
							type: 'line',
							data: [10, 11, 13, 11, 12, 12, 9],
							markPoint: {
								data: [
									{ type: 'max', name: 'Max' },
									{ type: 'min', name: 'Min' }
								]
							},
							markLine: {
								data: [{ type: 'average', name: 'Avg' }]
							}
						},
						{
							name: 'Lowest',
							type: 'line',
							//data: [1, 2, 3, 5, 3, 2, 0],
							data: [],
							//markPoint: {
							//data: [{ name: '周最低', value: 2, xAxis: 1, yAxis:0 }]
							//},
							markLine: {
								data: [
									{ type: 'average', name: 'Avg' },
									[
										{
											symbol: 'none',
											x: '90%',
											yAxis: 'max'
										},
										{
											symbol: 'circle',
											label: {
												position: 'start',
												formatter: 'Max'
											},
											type: 'max',
											name: '最高点'
										}
									]
								]
							}
						}
					]
				};
				if (option && typeof option === 'object') {
					myChart03.setOption(option);
				}
				window.addEventListener('resize', myChart03.resize);
			</script>
		</span>
	</body>
</html>